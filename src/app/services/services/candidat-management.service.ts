/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiCandidatManagementGet } from '../fn/candidat-management/api-candidat-management-get';
import { ApiCandidatManagementGet$Params } from '../fn/candidat-management/api-candidat-management-get';
import { apiCandidatManagementIdDelete } from '../fn/candidat-management/api-candidat-management-id-delete';
import { ApiCandidatManagementIdDelete$Params } from '../fn/candidat-management/api-candidat-management-id-delete';
import { apiCandidatManagementIdGet } from '../fn/candidat-management/api-candidat-management-id-get';
import { ApiCandidatManagementIdGet$Params } from '../fn/candidat-management/api-candidat-management-id-get';
import { CandidatDto } from '../models/candidat-dto';

@Injectable({ providedIn: 'root' })
export class CandidatManagementService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiCandidatManagementGet()` */
  static readonly ApiCandidatManagementGetPath = '/api/CandidatManagement';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCandidatManagementGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCandidatManagementGet$Response(params?: ApiCandidatManagementGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<CandidatDto>>> {
    return apiCandidatManagementGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCandidatManagementGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCandidatManagementGet(params?: ApiCandidatManagementGet$Params, context?: HttpContext): Observable<Array<CandidatDto>> {
    return this.apiCandidatManagementGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<CandidatDto>>): Array<CandidatDto> => r.body)
    );
  }

  /** Path part for operation `apiCandidatManagementIdGet()` */
  static readonly ApiCandidatManagementIdGetPath = '/api/CandidatManagement/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCandidatManagementIdGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCandidatManagementIdGet$Response(params: ApiCandidatManagementIdGet$Params, context?: HttpContext): Observable<StrictHttpResponse<CandidatDto>> {
    return apiCandidatManagementIdGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCandidatManagementIdGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCandidatManagementIdGet(params: ApiCandidatManagementIdGet$Params, context?: HttpContext): Observable<CandidatDto> {
    return this.apiCandidatManagementIdGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<CandidatDto>): CandidatDto => r.body)
    );
  }

  /** Path part for operation `apiCandidatManagementIdDelete()` */
  static readonly ApiCandidatManagementIdDeletePath = '/api/CandidatManagement/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCandidatManagementIdDelete()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCandidatManagementIdDelete$Response(params: ApiCandidatManagementIdDelete$Params, context?: HttpContext): Observable<StrictHttpResponse<string>> {
    return apiCandidatManagementIdDelete(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCandidatManagementIdDelete$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCandidatManagementIdDelete(params: ApiCandidatManagementIdDelete$Params, context?: HttpContext): Observable<string> {
    return this.apiCandidatManagementIdDelete$Response(params, context).pipe(
      map((r: StrictHttpResponse<string>): string => r.body)
    );
  }

}
