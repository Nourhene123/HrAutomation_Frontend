/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { RegisterModel } from '../../models/register-model';
import { TokenService } from '../../services/token.service';

export interface ApiAuthRegisterPost$Params {
      body?: RegisterModel
}

export function apiAuthRegisterPost(http: HttpClient, rootUrl: string, params?: ApiAuthRegisterPost$Params, context?: HttpContext): Observable<StrictHttpResponse<string>> {
  const rb = new RequestBuilder(rootUrl, apiAuthRegisterPost.PATH, 'post');
  const formData = new FormData();
  if (params?.body) {
    formData.append('firstname', params.body.firstname || '');
    formData.append('lastname', params.body.lastname || '');
    formData.append('email', params.body.email || '');
    formData.append('password', params.body.password || '');
    formData.append('telephone', params.body.telephone || '');

    if (params.body.competences) {
      formData.append('competences', JSON.stringify(params.body.competences));
    }

    if (params.body.cvFile) {
      formData.append('cvFile', params.body.cvFile);
    }
    rb.body(formData);
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<string>;
    })
  );
}

apiAuthRegisterPost.PATH = '/api/Auth/register';
